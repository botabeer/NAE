from flask import Flask, request, abort
from linebot import LineBotApi, WebhookHandler
from linebot.exceptions import InvalidSignatureError
from linebot.models import MessageEvent, TextMessage, TextSendMessage
import os, random, typing

app = Flask(__name__)

# ---------------------------
# إعداد مفاتيح LINE (من متغيرات البيئة)
# ---------------------------
LINE_CHANNEL_ACCESS_TOKEN = os.getenv("LINE_CHANNEL_ACCESS_TOKEN")
LINE_CHANNEL_SECRET = os.getenv("LINE_CHANNEL_SECRET")

line_bot_api = LineBotApi(LINE_CHANNEL_ACCESS_TOKEN)
handler = WebhookHandler(LINE_CHANNEL_SECRET)

# ---------------------------
# دوال مساعدة لقراءة ملفات (إن وُجدت)
# ---------------------------
def load_file_lines(filename: str) -> typing.List[str]:
    try:
        with open(filename, "r", encoding="utf-8") as f:
            return [line.strip() for line in f if line.strip()]
    except Exception:
        return []

questions_file = load_file_lines("questions.txt")
challenges_file = load_file_lines("challenges.txt")
confessions_file = load_file_lines("confessions.txt")
personal_questions_file = load_file_lines("personal.txt")

# بدائل مدمجة لو الملفات فاضية
if not questions_file:
    questions_file = [
        "ما أكثر صفة تحبها في شريك حياتك؟",
        "ما أول شعور جاءك لما شفته لأول مرة؟",
        "لو تقدر تغير شيء في علاقتك، وش هو؟"
    ]
if not challenges_file:
    challenges_file = [
        "اكتب رسالة قصيرة تبدأ بـ: أحبك لأن...",
        "ارسل له صورة تمثّل أجمل ذكرى عندك معه."
    ]
if not confessions_file:
    confessions_file = [
        "اعترف بأول شخص جذبك في حياتك.",
        "اعترف بأكثر عادة سيئة عندك."
    ]
if not personal_questions_file:
    personal_questions_file = [
        "تحب تبدأ يومك بالنشاط ولا بالهدوء؟",
        "هل تعتبر نفسك من النوع الاجتماعي أم الانطوائي؟"
    ]

# ---------------------------
# تعريف 10 ألعاب - كل لعبة 10 أسئلة - منسقة كما طلبت
# ---------------------------
games = {
    "لعبه1": [  # الغابة
        "سؤال 1:\nأنت تمشي في غابة مظلمة وهادئة، فجأة تسمع صوت خطوات خلفك. ماذا تفعل؟\n1. تلتفت فورًا\n2. تسرع بخطواتك\n3. تتجاهل وتواصل طريقك\n4. تختبئ خلف شجرة",
        "سؤال 2:\nتصل إلى نهر يجري بسرعة. كيف تعبره؟\n1. تبني جسرًا صغيرًا\n2. تبحث عن مكان ضحل لعبوره\n3. تسبح من خلاله\n4. تنتظر حتى يهدأ التيار",
        "سؤال 3:\nرأيت كوخًا صغيرًا بين الأشجار. ماذا تفعل؟\n1. تقترب وتطرق الباب\n2. تدخل دون تردد\n3. تراقبه من بعيد\n4. تتجاوزه وتكمل طريقك",
        "سؤال 4:\nداخل الكوخ وجدت طاولة عليها مفتاح وورقة. ماذا تأخذ؟\n1. المفتاح\n2. الورقة\n3. كليهما\n4. لا تأخذ شيئًا",
        "سؤال 5:\nخرجت من الكوخ ووجدت طريقين. أي تختار؟\n1. طريق مضيء بالشمس\n2. طريق مظلم لكنه قصير\n3. طريق فيه أزهار\n4. طريق وعر لكنه آمن",
        "سؤال 6:\nسمعت صوت حيوان بري. ماذا تفعل؟\n1. تبتعد فورًا\n2. تختبئ\n3. تحاول معرفة نوع الحيوان\n4. تصرخ طلبًا للمساعدة",
        "سؤال 7:\nرأيت ضوءًا غريبًا في الأفق. ماذا تفعل؟\n1. تقترب منه بحذر\n2. تتجاهله\n3. تنتظر لترى ما سيحدث\n4. تركض نحوه بحماس",
        "سؤال 8:\nوجدت سلة فيها طعام. كيف تتصرف؟\n1. تأكل فورًا\n2. تشم الطعام لتتأكد\n3. لا تقترب منه\n4. تأخذها معك",
        "سؤال 9:\nحل الليل وأنت ما زلت في الغابة. أين تنام؟\n1. على الأرض\n2. فوق شجرة\n3. داخل كهف قريب\n4. تظل مستيقظًا حتى الصباح",
        "سؤال 10:\nصباحًا رأيت طريق العودة. هل ترجع؟\n1. نعم فورًا\n2. بعد أن تستكشف أكثر\n3. لا، أريد المغامرة\n4. أنتظر أن أجد أحدًا"
    ],
    "لعبه2": [  # الجزيرة
        "سؤال 1:\nاستيقظت على جزيرة غامضة لوحدك. ما أول ما تفعله؟\n1. تستكشف المكان\n2. تبحث عن ماء\n3. تصرخ طلبًا للمساعدة\n4. تجلس للتفكير",
        "سؤال 2:\nرأيت أثر أقدام على الرمل. ماذا تفعل؟\n1. تتبعها\n2. تتجاهلها\n3. تراقبها من بعيد\n4. تغطيها بالرمل",
        "سؤال 3:\nوجدت ثمرة غير معروفة. هل تأكلها؟\n1. نعم فورًا\n2. لا أقترب منها\n3. أختبرها أولًا\n4. أحتفظ بها",
        "سؤال 4:\nاقترب الليل ولا مأوى لديك. ماذا تفعل؟\n1. تبني مأوى بسيط\n2. تصعد على شجرة\n3. تشعل نارًا للحماية\n4. تظل مستيقظًا",
        "سؤال 5:\nسمعت أصوات غريبة من الغابة. ماذا تفعل؟\n1. تقترب منها\n2. تبتعد فورًا\n3. تراقب من بعيد\n4. تصرخ",
        "سؤال 6:\nوجدت قاربا صغيرًا. هل تستخدمه؟\n1. نعم فورًا\n2. أختبره أولًا\n3. أنتظر الصباح\n4. أبحث عن أدوات أخرى",
        "سؤال 7:\nظهر شخص غريب على الجزيرة. ماذا تفعل؟\n1. تتحدث معه\n2. تختبئ\n3. تراقبه من بعيد\n4. تهاجمه أولًا",
        "سؤال 8:\nبدأ المطر يهطل بشدة. كيف تتصرف؟\n1. تبحث عن كهف\n2. تغطي نفسك بأوراق\n3. تستمتع بالمطر\n4. تحاول إشعال نار",
        "سؤال 9:\nوجدت رسالة داخل زجاجة. ماذا تفعل؟\n1. تفتحها فورًا\n2. تحتفظ بها\n3. تتجاهلها\n4. ترسل واحدة مثلها",
        "سؤال 10:\nرأيت طائرة تمر فوقك. ماذا تفعل؟\n1. تلوّح لها\n2. تشعل نارًا لإشارة\n3. تصرخ\n4. تجلس تنتظر"
    ],
    "لعبه3": [  # المدينة
        "سؤال 1:\nأنت في مدينة جديدة. أول شيء تفعله؟\n1. تستكشف\n2. تبحث عن مطعم\n3. تبحث عن فندق\n4. تسأل الناس",
        "سؤال 2:\nرأيت إعلانًا غريبًا في الشارع. هل تتابعه؟\n1. نعم بحماس\n2. لا أهتم\n3. ألتقط له صورة\n4. أتجاهله",
        "سؤال 3:\nشخص عرض عليك عملًا غريبًا. هل تقبله؟\n1. نعم\n2. لا\n3. أسأله التفاصيل\n4. أؤجل القرار",
        "سؤال 4:\nأضاع طفل طريقه أمامك. ماذا تفعل؟\n1. تساعده فورًا\n2. تبحث عن والديه\n3. تتصل بالشرطة\n4. تتجاهله",
        "سؤال 5:\nضعت في أحد الأحياء. كيف تتصرف؟\n1. تسأل المارة\n2. تستخدم الخريطة\n3. تتجول حتى تجد الطريق\n4. تنتظر أحدًا يساعدك",
        "سؤال 6:\nبدأت السماء تمطر. كيف تتصرف؟\n1. تفتح المظلة\n2. تجري لمكان مغلق\n3. تستمتع بالمطر\n4. تكمل طريقك",
        "سؤال 7:\nوجدت محفظة في الطريق. ماذا تفعل؟\n1. تسلمها للشرطة\n2. تبحث عن صاحبها\n3. تتركها مكانها\n4. تأخذ المال فقط",
        "سؤال 8:\nرأيت شخصًا يراقبك. كيف تتصرف؟\n1. تراقبه أنت أيضًا\n2. تبتعد فورًا\n3. تواجهه وتسأله\n4. تتجاهله",
        "سؤال 9:\nصديقك تأخر عن الموعد. ما رد فعلك؟\n1. تغضب\n2. تنتظره\n3. تغادر\n4. تتصل به",
        "سؤال 10:\nانقطعت الكهرباء ليلاً. ماذا تفعل؟\n1. تشعل شمعة\n2. تستخدم هاتفك\n3. تخرج تتمشى\n4. تنام"
    ],
    # ألعاب إضافية (4-10) مهيأة بنفس التنسيق:
    "لعبه4": [  # القصر
        "سؤال 1:\nأمامك باب قصر قديم. تدخل؟\n1. أدخل مباشرة\n2. أراقب من الخارج\n3. أدعو شخصًا معي\n4. أعود لاحقًا",
        "سؤال 2:\nوجدت درجًا يؤدي للأسفل. تنزل؟\n1. نعم\n2. لا\n3. تتأكد من الضوء\n4. تبحث عن طريق آخر",
        "سؤال 3:\nوجدت مرآة تبدو غريبة. ماذا تفعل؟\n1. تنظر فيها\n2. تكسرها\n3. تلمسها\n4. تبتعد",
        "سؤال 4:\nرأيت غرفة مليئة بالكتب. ماذا تختار؟\n1. تفتح كتابًا قديمًا\n2. تأخذ واحدًا معك\n3. تتجاهلها\n4. تدعو أحدًا للمساعدة",
        "سؤال 5:\nصوت خطوات قربك، ماذا تفعل؟\n1. تراقب\n2. تختبئ\n3. تصرخ\n4. تتبع الصوت",
        "سؤال 6:\nوجدت صندوقًا مغلقًا. تفتحه؟\n1. نعم بحذر\n2. لا\n3. تبحث عن مفتاح\n4. تتركه",
        "سؤال 7:\nهناك رسمة على الحائط تبدو كرمز، ماذا تفعل؟\n1. تدرسها\n2. تلمسها\n3. تتجاهلها\n4. تأخذ صورة",
        "سؤال 8:\nرأيت نافذة تطل على بستان، ماذا تفعل؟\n1. تقف وتتأمل\n2. تقفز للخروج\n3. تغلقها\n4. تنادي شخصًا",
        "سؤال 9:\nوجدت خاتمًا براقًا، تلبسه؟\n1. نعم\n2. لا\n3. تضعه بحذر\n4. تتركه",
        "سؤال 10:\nالقصر يهتز قليلاً، ماذا تفعل؟\n1. تخرج فورًا\n2. تبحث عن مخرج آمن\n3. تنتظر لتهدأ الأمور\n4. تتصل بشخص"
    ],
    "لعبه5": [  # الكوكب
        "سؤال 1:\nاستيقظت على كوكب جديد. أول ما تفعله؟\n1. تستكشف المشهد\n2. تبحث عن مأوى\n3. تجمع عينات\n4. تنتظر إشارات",
        "سؤال 2:\nوجدت نباتًا غريبًا، ماذا تفعل؟\n1. تلمسه\n2. تلتقط صورة\n3. تتجنبه\n4. تأخذ منه عينة",
        "سؤال 3:\nرأيت مخلوقًا صغيرًا. كيف تتصرف؟\n1. تقترب بحذر\n2. تبتعد\n3. تراقبه من بعيد\n4. تتواصل معه",
        "سؤال 4:\nتواجه فصل ليل غريب، ماذا تفعل؟\n1. تبني مأوى\n2. تشعل نارًا\n3. تواصل السير\n4. تستكشف المكان",
        "سؤال 5:\nوجدت جهازًا غريبًا، تضغط عليه؟\n1. نعم\n2. لا\n3. تدرسه أولًا\n4. تحطمه",
        "سؤال 6:\nتراودك رؤية ضوء بعيد، ماذا تفعل؟\n1. تذهب نحوه\n2. تراقب\n3. تقيس المسافة\n4. تعود",
        "سؤال 7:\nسمعت نغمة غريبة، ماذا تفعل؟\n1. تبحث عن مصدرها\n2. تتجاهلها\n3. تسجلها\n4. تنادي لمشاركة الصوت",
        "سؤال 8:\nوجدت بوابة، تدخل أم لا؟\n1. أدخل\n2. لا\n3. أنتظر\n4. أبحث عن معلومات",
        "سؤال 9:\nواجهتك مشكلة تقنية، كيف تحلها؟\n1. تجريبًا\n2. تخطيطًا\n3. تواصل مع الآخرين\n4. تتجاهلها",
        "سؤال 10:\nتوفرت وسيلة للعودة، تفعلها؟\n1. أعود\n2. أبقى للاستكشاف\n3. أشارك الاكتشاف\n4. أنتظر المساعدة"
    ],
    "لعبه6": [  # البحر
        "سؤال 1:\nأنت على شاطئ واسع. ماذا تفعل أولاً؟\n1. تسبح\n2. تمشي على الرمال\n3. تبحث عن صدفة\n4. تجلس تتأمل",
        "سؤال 2:\nوجدت قاربًا صغيرًا، تستخدمه؟\n1. نعم\n2. لا\n3. تفتشه أولًا\n4. تنتظر مساعدة",
        "s سؤال 3:\nوجدت خريطة بحرية قديمة. ماذا تفعل؟\n1. تتبعها\n2. تتركها\n3. تحفظها\n4. تظهرها للآخرين",
        "سؤال 4:\nرأيت ضوءًا في البحر ليلاً. ماذا تفعل؟\n1. تقترب\n2. تحذر الآخرين\n3. تبتعد\n4. تراقب",
        "سؤال 5:\nسمعت صوت غريب تحت الماء، كيف تتصرف؟\n1. تسبح نحوه\n2. تبتعد\n3. تسجل الصوت\n4. تبحث عن مصدره",
        "سؤال 6:\nعاصفة قادمة، ماذا تفعل؟\n1. تثبت القارب\n2. تصل للشاطئ\n3. تبتعد للبحر العميق\n4. تبني ملاذ",
        "سؤال 7:\nوجدت لؤلؤة نادرة، ماذا تفعل؟\n1. تأخذها\n2. تتركها\n3. تبيعها\n4. تهديها لأحد",
        "سؤال 8:\nشخص في الماء يحتاج مساعدة، ماذا تفعل؟\n1. تنقذه فورًا\n2. تنادي لإنقاذه\n3. تستخدم قاربًا\n4. تبحث عن معدات",
        "سؤال 9:\nوجدت مقبرة سفن قديمة، ما تفعل؟\n1. تستكشفها\n2. تتركها\n3. تجمع آثارًا\n4. تقرر العودة",
        "سؤال 10:\nرأيت جزيرة صغيرة على الخريطة، تذهب؟\n1. نعم\n2. لا\n3. تجهز نفسك\n4. تنتظر"
    ],
    "لعبه7": [  # الكهف
        "سؤال 1:\nدخلت كهفًا مظلمًا، ماذا تفعل أولاً؟\n1. تشعل مصباحًا\n2. تمشي بحذر\n3. تعود للخارج\n4. تنادي للتأكد من الأمان",
        "سؤال 2:\nوجدت نقوشًا على الجدار، ماذا تفعل؟\n1. تدرسها\n2. تلمسها\n3. تصورها\n4. تتجاهلها",
        "سؤال 3:\nسمعت صدى غريب، ماذا تفعل؟\n1. تتبع الصوت\n2. تبتعد\n3. تصرخ\n4. تنصت بهدوء",
        "سؤال 4:\nوجدت مياهًا جوفية، تشربها؟\n1. نعم\n2. لا\n3. تغليها أولًا\n4. تختبرها",
        "سؤال 5:\nرأيت فتحة أعلى، تصعد؟\n1. نعم\n2. لا\n3. تبحث عن سلم\n4. تنتظر مساعدة",
        "سؤال 6:\nوجدت درجًا ضيقًا، تنهض للصعود؟\n1. نعم\n2. لا\n3. تتأكد من ثباته\n4. تبحث عن بديل",
        "سؤال 7:\nرأيت غرفة مليئة بالبلورات، تأخذ قطعة؟\n1. نعم\n2. لا\n3. تلتقط صورة\n4. تسجل موقعها",
        "سؤال 8:\nتواجه صدعًا في الأرض، كيف تتصرف؟\n1. تتجنبه\n2. تحاول العبور\n3. تقيس عمقه\n4. تنادي للحصول على أدوات",
        "سؤال 9:\nسمعت حركة خلفك، ماذا تفعل؟\n1. تنعطف بسرعة\n2. تصرخ\n3. تختبئ\n4. تمشي بحذر نحوها",
        "سؤال 10:\nوجدت مخبأ قديم، تدخل؟\n1. نعم بحذر\n2. لا\n3. تفتح من بعيد\n4. تنتظر"
    ],
    "لعبه8": [  # المدرسة
        "سؤال 1:\nأنت في مدرسة قديمة، ماذا تفعل أولاً؟\n1. تدخل صفًا\n2. تسأل عن المكتبة\n3. تبحث عن المدرسين\n4. تتجول",
        "سؤال 2:\nوجدت دفتر ملاحظات غريب، ماذا تفعل؟\n1. تقرأه\n2. تغلقه\n3. تأخذ ملاحظة فقط\n4. تتركه",
        "سؤال 3:\nأستاذ يعرض مسابقة غريبة، تشارك؟\n1. نعم\n2. لا\n3. تسأل عن المكافأة\n4. تؤجل القرار",
        "سؤال 4:\nرأيت مجموعة تتناقش، تنضم؟\n1. نعم\n2. لا\n3. تراقب أولًا\n4. تسأل عن الموضوع",
        "سؤال 5:\nوجدت غرفة سرية، تدخل؟\n1. نعم\n2. لا\n3. تطرق الباب\n4. تبحث عن مفتاح",
        "سؤال 6:\nامتحان مفاجئ، كيف تتصرف؟\n1. تركز وتجيب\n2. تحاول الغش\n3. تخرج\n4. تسأل عن الوقت",
        "سؤال 7:\nوجدت كتاب قديم في الخزانة، ماذا تفعل؟\n1. تدرسه\n2. تتركه\n3. تأخذ منه ملاحظة\n4. تعرضه للآخرين",
        "سؤال 8:\nرأيت لوحة فنية غريبة، ماذا تفعل؟\n1. تدرسها\n2. تصورها\n3. تتجاهلها\n4. تسأل عنها",
        "سؤال 9:\nصديقك يحتاج مساعدة في الواجب، تساعده؟\n1. نعم فورًا\n2. تشرح له خطوات\n3. ترفض\n4. توجهه لشرح آخر",
        "سؤال 10:\nانتهت المدرسة فجأة، ماذا تفعل؟\n1. تضحك وتخرج\n2. تجلس للتفكير\n3. تبحث عن سبب\n4. تسأل المعلمين"
    ],
    "لعبه9": [  # المستقبل
        "سؤال 1:\nاستيقظت في مستقبل مختلف، ماذا تفعل أولاً؟\n1. تستكشف التكنولوجيا\n2. تبحث عن معلومات\n3. تحاول التواصل مع الآخرين\n4. تراقب بصمت",
        "سؤال 2:\nوجدت جهازًا يمكنه تغيير الذاكرة، تستخدمه؟\n1. نعم\n2. لا\n3. تجرب جزءًا صغيرًا\n4. تدرسه أولًا",
        "سؤال 3:\nرأيت آلة تستطيع السفر عبر الزمن، تذهب؟\n1. نعم\n2. لا\n3. تذهب لمحاولة قصيرة\n4. تتركها",
        "سؤال 4:\nالعالم يحتاج قرارًا مهمًا، تتدخل؟\n1. نعم بقوة\n2. لا تترك الخبراء\n3. تقدم اقتراحًا صغيرًا\n4. تراقب الانتقادات",
        "سؤال 5:\nوجدت عملًا بمستقبل مشرق، تقبله؟\n1. نعم\n2. لا\n3. تسأل عن التفاصيل\n4. تؤجل",
        "سؤال 6:\nتقابل روبوتًا ودودًا، كيف تتعامل؟\n1. تتعاون معه\n2. تراقبه\n3. تختبره\n4. تبتعد",
        "سؤال 7:\nتواجه مشكلة تقنية كبرى، كيف تحلها؟\n1. تُجرّب حلولًا مبتكرة\n2. تعتمد على فريق\n3. تستشير خبراء\n4. تؤجل للحظة أخرى",
        "سؤال 8:\nرأيت مدينة عائمة، تدخل؟\n1. نعم\n2. لا\n3. تدرس نظامها\n4. تراقب من الخارج",
        "سؤال 9:\nاقتراح تغييرات جذرية على المجتمع، تؤيده؟\n1. نعم\n2. لا\n3. أدرس التبعات\n4. أرفض لأسباب أخلاقية",
        "سؤال 10:\nوجدت فرصة للعودة للحاضر، تفعل؟\n1. أعود\n2. أبقى\n3. أرسل تقريرًا\n4. أنتظر فرصة أفضل"
    ],
    "لعبه10": [  # الحلم
        "سؤال 1:\nدخلت إلى حلم غريب، ماذا تفعل؟\n1. تستكشف المشاهد\n2. تحاول الاستيقاظ\n3. تتبع العناصر الغريبة\n4. تستمتع بالحلم",
        "سؤال 2:\nتحدث مع شخصية من أحلامك، ماذا تقول؟\n1. أسأل عن سبب وجودها\n2. أستمر بالحديث\n3. أتركها تمضي\n4. أطلب نصيحة",
        "سؤال 3:\nوجدت باب داخل الحلم، تفتحه؟\n1. نعم\n2. لا\n3. تراقبه\n4. تتركه",
        "سؤال 4:\nالحلم يتحول إلى كابوس، كيف تواجهه؟\n1. أقاوم بشجاعة\n2. أهرب\n3. أبحث عن مخرج\n4. أصحو من النوم",
        "سؤال 5:\nرأيت رمزًا متكررًا، ماذا تفعل؟\n1. تبحث عن تفسير\n2. تتجاهله\n3. ترسمه\n4. تسجل الحلم",
        "سؤال 6:\nشعور مفاجئ بالسقوط، كيف تتصرف؟\n1. أستيقظ\n2. أستمتع بالإحساس\n3. أحاول التحكّم\n4. أبحث عن سبب",
        "سؤال 7:\nالتقيت بنفسك في الحلم، ماذا تفعل؟\n1. أتحدث معها\n2. أراقبها\n3. أهرب\n4. أتعلم منها",
        "سؤال 8:\nوجدت رسالة مشفرة، تفتحها؟\n1. نعم\n2. لا\n3. أحللها أولًا\n4. أتركها",
        "سؤال 9:\nالحلم يوفر خيار للبقاء فيه، تفعل؟\n1. أبقى\n2. أعود\n3. أؤجل القرار\n4. أشارك الآخرين",
        "سؤال 10:\nاستيقظت وعندك تذكّر غريب، تفعل؟\n1. تدون الأفكار\n2. تتجاهلها\n3. تشاركها مع أحد\n4. تبحث عن معنى"
    ]
}

# ---------------------------
# جلسات المجموعات: بنية:
# group_sessions[group_id] = {
#     "game": "لعبهX",
#     "players": { user_id: { "step": int, "answers": [ints] } },
#     "state": "joining" or "running"
# }
# ---------------------------
group_sessions = {}

# ---------------------------
# تحليل مفصل (أسلوبي علمي/مفصّل)
# ---------------------------
def detailed_personality_analysis(name: str, answers: typing.List[int]) -> str:
    # حساب مختصر للتوزيع
    total = max(1, len(answers))
    counts = {1: 0, 2: 0, 3: 0, 4: 0}
    for a in answers:
        if isinstance(a, int) and a in counts:
            counts[a] += 1
    # حساب نسب
    perc = {k: (counts[k] / total) * 100 for k in counts}

    # بناء الوصف العلمي المفصل
    paragraphs = []
    paragraphs.append(f"تحليل مفصل لـ {name} (استندنا إلى {total} إجابات):")
    paragraphs.append(f"- مقياس المغامرة/الاندفاع (خيار 1): {counts[1]} إجابة ({perc[1]:.0f}%)")
    paragraphs.append(f"- مقياس الحذر/التخطيط (خيار 2): {counts[2]} إجابة ({perc[2]:.0f}%)")
    paragraphs.append(f"- مقياس السكينة/التأمل (خيار 3): {counts[3]} إجابة ({perc[3]:.0f}%)")
    paragraphs.append(f"- مقياس العملية/المنطق (خيار 4): {counts[4]} إجابة ({perc[4]:.0f}%)\n")

    # تحليل تفسيري مفصل
    if perc[1] >= 50:
        paragraphs.append("نتيجة بارزة: تميل بقوة إلى الاستكشاف والمخاطرة. تتخذ قرارات سريعة وتفضل الخبرة العملية على التحليل الطويل.")
    elif perc[2] >= 50:
        paragraphs.append("نتيجة بارزة: شخص حذر ومنهجي. تخطط قبل الفعل وتعطي الأولوية للأمان والنتائج المستقرة.")
    elif perc[3] >= 50:
        paragraphs.append("نتيجة بارزة: تميل للهدوء والتأمل، تفضل الاستقرار الداخلي والتعامل الهادئ مع المواقف.")
    elif perc[4] >= 50:
        paragraphs.append("نتيجة بارزة: شخصية عملية ومنطقية، تتخذ قرارات بناءً على تحليل ومقاييس موضوعية.")
    else:
        paragraphs.append("نتيجة متوازنة: لا يوجد اتجاه متطرف، تميل للموازنة بين المخاطرة والحذر والتأمل والمنطق حسب الموقف.")

    # إضافة استنتاجات سلوكية
    paragraphs.append("\nاستنتاجات سلوكية:")
    if perc[1] > 30:
        paragraphs.append("• لديك قدرة جيدة على مواجهة المجهول وتحب العمل الميداني والتجريبي.")
    if perc[2] > 30:
        paragraphs.append("• تُظهر ميلاً للتخطيط وحب النظام، مناسب لمهام تتطلب دقة وتحضير.")
    if perc[3] > 30:
        paragraphs.append("• تملك قدرة على الاحتفاظ بهدوئك تحت الضغط والاهتمام بالتفاصيل النفسية.")
    if perc[4] > 30:
        paragraphs.append("• تفضل الحلول الفعّالة والقابلة للقياس، وتميل لاتخاذ قرارات سريعة بعد تحليل منطقي.")

    paragraphs.append("\nتوصية عامة: حاول مزج نقاط قوتك (مثلاً: إذا كنت تميل للمغامرة جرب التخطيط البسيط قبل التنفيذ).")

    return "\n".join(paragraphs)

# ---------------------------
# Webhook endpoint
# ---------------------------
@app.route("/callback", methods=["POST"])
def callback():
    signature = request.headers.get("X-Line-Signature", "")
    body = request.get_data(as_text=True)
    try:
        handler.handle(body, signature)
    except InvalidSignatureError:
        abort(400)
    return "OK"

# ---------------------------
# مراقبة الرسائل والتعامل مع الأوامر
# ---------------------------
@handler.add(MessageEvent, message=TextMessage)
def handle_message(event):
    source = event.source
    user_id = source.user_id
    group_id = getattr(source, "group_id", None)
    text_raw = event.message.text.strip()
    text = text_raw.strip()

    # ======= أوامر عامة من أي مكان =======
    if text == "مساعدة":
        help_text = (
            "أوامر البوت:\n"
            "- سؤال → سؤال حب وصراحة.\n"
            "- تحدي → تحدي عاطفي.\n"
            "- اعتراف → اعتراف صريح.\n"
            "- اسئلة شخصية → سؤال شخصي عشوائي.\n"
            "- لعبهX → بدء جلسة لعبة جماعية في القروب (X من 1 إلى 10).\n"
            "  بعد بدء اللعبة: كل عضو يرسل 'ابدأ' للانضمام ثم يجيب بالأرقام 1-4.\n"
            "- مساعدة → هذا النص."
        )
        line_bot_api.reply_message(event.reply_token, TextSendMessage(text=help_text))
        return

    if text == "سؤال":
        q = random.choice(questions_file)
        line_bot_api.reply_message(event.reply_token, TextSendMessage(text=q))
        return

    if text == "تحدي":
        t = random.choice(challenges_file)
        line_bot_api.reply_message(event.reply_token, TextSendMessage(text=t))
        return

    if text == "اعتراف":
        a = random.choice(confessions_file)
        line_bot_api.reply_message(event.reply_token, TextSendMessage(text=a))
        return

    if text == "اسئلة شخصية":
        p = random.choice(personal_questions_file)
        line_bot_api.reply_message(event.reply_token, TextSendMessage(text=p))
        return

    # ======= أوامر ألعاب جماعية بالمجموعة =======
    # بدء اللعبة في المجموعة: المستخدم يكتب 'لعبه1' .. 'لعبه10' داخل القروب
    if group_id and text.startswith("لعبه"):
        # تحقق من رقم اللعبة صالح
        game_key = text
        if game_key not in games:
            line_bot_api.reply_message(event.reply_token, TextSendMessage(text="اختر لعبه1 إلى لعبه10."))
            return

        # أنشئ جلسة للمجموعة أو أعد تهيئتها
        group_sessions[group_id] = {
            "game": game_key,
            "players": {},   # سيملأ عندما يرسل كل لاعب "ابدأ"
            "state": "joining"  # 'joining' أو 'running'
        }
        # نشر التعليمات في القروب
        line_bot_api.reply_message(event.reply_token, TextSendMessage(
            text=(f"اللعبة {game_key} بدأت في هذه المجموعة.\n"
                  "كل عضو يرسل 'ابدأ' للانضمام. بعد الانضمام، أجب بالأرقام 1-4 لكل سؤال.\n"
                  "عندما يكمّل كل لاعب الأسئلة سينتج له تحليل مفصّل هنا في القروب.")
        ))
        return

    # انضمام لاعب للجلسة: يرسل 'ابدأ' داخل القروب
    if group_id and text == "ابدأ":
        gs = group_sessions.get(group_id)
        if not gs or gs["state"] != "joining":
            # إذا لا توجد جلسة انضمام/الجلسة انتهت أو لم تبدأ
            return
        players = gs["players"]
        if user_id in players:
            # اللاعب مسجّل مسبقًا، نرسل له السؤال الحالي
            player_session = players[user_id]
            step = player_session["step"]
            q = games[gs["game"]][step]
            # محاولة جلب اسم العرض
            try:
                name = line_bot_api.get_profile(user_id).display_name
            except:
                name = "مشارك"
            line_bot_api.reply_message(event.reply_token, TextSendMessage(text=f"{name}\n{q}"))
            return
        # تسجيل لاعب جديد
        players[user_id] = {"step": 0, "answers": []}
        try:
            name = line_bot_api.get_profile(user_id).display_name
        except:
            name = "مشارك"
        # إرسال السؤال الأول لهذا اللاعب (في نفس القروب كإشعار)
        q0 = games[gs["game"]][0]
        line_bot_api.reply_message(event.reply_token, TextSendMessage(text=f"{name}\n{q0}"))
        return

    # متابعة إجابات اللاعب أثناء الجلسة (داخل القروب)
    if group_id and group_id in group_sessions and user_id in group_sessions[group_id]["players"]:
        gs = group_sessions[group_id]
        player = gs["players"][user_id]
        # تقبل الأرقام 1-4 أو نص يحتوي على رقم
        answer_num = None
        txt = text.strip()
        if txt.isdigit() and 1 <= int(txt) <= 4:
            answer_num = int(txt)
        else:
            # بحث عن وجود 1/2/3/4 في النص
            for d in ["1", "2", "3", "4"]:
                if d in txt:
                    answer_num = int(d)
                    break
        if answer_num is None:
            # نطلب من اللاعب كتابة رقم فقط (نرسل له رسالة خاصة في القروب)
            line_bot_api.reply_message(event.reply_token, TextSendMessage(text="اكتب رقم الخيار فقط من 1 إلى 4."))
            return

        # سجّل الإجابة وتقدّم خطوة
        player["answers"].append(answer_num)
        player["step"] += 1

        # إذا لم ينتهِ اللاعب، أرسل له السؤال التالي
        current_game_qs = games[gs["game"]]
        if player["step"] < len(current_game_qs):
            next_q = current_game_qs[player["step"]]
            try:
                name = line_bot_api.get_profile(user_id).display_name
            except:
                name = "مشارك"
            line_bot_api.reply_message(event.reply_token, TextSendMessage(text=f"{name}\n{next_q}"))
            return
        else:
            # اللاعب أكمل كل الأسئلة → حساب التحليل وإرساله إلى القروب
            try:
                name = line_bot_api.get_profile(user_id).display_name
            except:
                name = "مشارك"
            analysis_text = detailed_personality_analysis(name, player["answers"])
            # نرسل التحليل إلى القروب مع الاسم (منشن نصي)
            line_bot_api.push_message(group_id, TextSendMessage(text=analysis_text))
            # إزالة اللاعب من الجلسة
            del gs["players"][user_id]
            # إنتهاء الجلسة عندما لا يبقى لاعبين مسجلين (يمكن إبقاؤها مفتوحة لإعادة الانضمام)
            # هنا نترك الجلسة مفتوحة لتبقي أعضاء آخرين ينضمون ويبدؤون لعبهم.
            return

    # إذا كان النص ضمن أوامر فردية لكن خارج جلسة:
    # (لا نرد على أي نص آخر بحسب ما طلبت — إلا أوامر المساعدة/السؤال/تحدي/اعتراف/اسئلة شخصية)
    return


# ---------------------------
# تشغيل التطبيق
# ---------------------------
if __name__ == "__main__":
    port = int(os.getenv("PORT", 5000))
    app.run(host="0.0.0.0", port=port)
